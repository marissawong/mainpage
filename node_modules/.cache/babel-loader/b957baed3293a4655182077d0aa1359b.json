{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marissa\\\\Desktop\\\\Programas\\\\marissa\\\\src\\\\components\\\\Projects.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useCurrentWidth from '../utils/width'; //import AccordionPanel from '../utils/accordion';\n\nimport './../styles/projects.scss';\nimport './../styles/accordion.scss';\nimport ProjectsList from './ProjectsList';\nimport StackGrid from 'react-stack-grid';\nconst defaultSearch = ['academic', 'article', 'professional', 'project'];\n\nfunction Projects() {\n  function AccordionPanel({\n    title,\n    type,\n    url,\n    description,\n    institution\n  }) {\n    var [isOpen, setIsOpen] = useState(false);\n    const projectColor = '#e0f1f1';\n    const professionalColor = '#e5e0f1';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"acctitle\",\n      style: isOpen ? {\n        backgroundColor: '#b5dddd'\n      } : null,\n      onClick: () => setIsOpen(!isOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, title), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accdescription\",\n      onClick: () => setIsOpen(!isOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    }, description), type.toLowerCase().includes('article') && /*#__PURE__*/React.createElement(\"a\", {\n      href: url,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"additional\",\n      style: !isOpen ? {\n        marginTop: '-5px'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"GO TO ARTICLE\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accinstitution\",\n      onClick: () => setIsOpen(!isOpen),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, institution));\n  }\n\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [filtered, setFiltered] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const grid = React.useRef(null);\n  var currentWidth = useCurrentWidth();\n  var gridWidth = '33.33%';\n  useEffect(() => {\n    const results = ProjectsList.filter(proj => {\n      return Object.keys(proj).some(key => proj[key].toLowerCase().includes(searchValue.toLowerCase()));\n    });\n    setSearchResults(results);\n  }, [searchValue]);\n  useEffect(() => {\n    requestAnimationFrame(() => {\n      if (grid.current) {\n        grid.current.updateLayout();\n      }\n    });\n  }, [grid, currentWidth, clicked]);\n\n  function gridColumnWidth() {\n    if (currentWidth >= 1000) {\n      gridWidth = '25%';\n    } else if (currentWidth > 800) {\n      gridWidth = '33.33%';\n    } else if (currentWidth < 800) {\n      gridWidth = '50%';\n    }\n\n    return gridWidth;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"itemspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"seeing \", searchResults.length, \" of \", ProjectsList.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filterbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search\",\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    className: \"searchField\",\n    style: currentWidth <= 800 ? {\n      width: 'calc(80vw - 22px)'\n    } : {\n      width: 'calc(33.33% - 30px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }), defaultSearch.map(key => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      searchValue == key ? setSearchValue('') : setSearchValue(key);\n    },\n    style: searchValue == key ? {\n      backgroundColor: '#e0f1f1'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, key))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StackGrid, {\n    columnWidth: gridColumnWidth(),\n    gutterHeight: 5,\n    gutterWidth: 15,\n    gridRef: r => grid.current = r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, searchResults.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"click\",\n    onClick: () => setClicked(!clicked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(AccordionPanel, {\n    title: item.title,\n    type: item.type,\n    url: item.url,\n    description: item.description,\n    institution: item.institution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }))))))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["C:/Users/Marissa/Desktop/Programas/marissa/src/components/Projects.js"],"names":["React","useState","useEffect","useRef","useCurrentWidth","ProjectsList","StackGrid","defaultSearch","Projects","AccordionPanel","title","type","url","description","institution","isOpen","setIsOpen","projectColor","professionalColor","backgroundColor","toLowerCase","includes","marginTop","searchValue","setSearchValue","searchResults","setSearchResults","filtered","setFiltered","clicked","setClicked","grid","currentWidth","gridWidth","results","filter","proj","Object","keys","some","key","requestAnimationFrame","current","updateLayout","gridColumnWidth","length","e","target","value","width","map","r","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,eAAP,MAA4B,gBAA5B,C,CACA;;AACA,OAAO,2BAAP;AACA,OAAO,4BAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,MAAMC,aAAa,GAAG,CAAC,UAAD,EAAa,SAAb,EAAwB,cAAxB,EAAwC,SAAxC,CAAtB;;AAEA,SAASC,QAAT,GAAoB;AAEhB,WAASC,cAAT,CAAwB;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA;AAAhC,GAAxB,EAAsE;AAClE,QAAI,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAAlC;AACA,UAAMgB,YAAY,GAAG,SAArB;AACA,UAAMC,iBAAiB,GAAG,SAA1B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AACI,MAAA,KAAK,EAAEH,MAAM,GAAG;AAACI,QAAAA,eAAe,EAAE;AAAlB,OAAH,GAAkC,IADnD;AAEK,MAAA,OAAO,EAAE,MAAMH,SAAS,CAAC,CAACD,MAAF,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKL,KAJL,CADJ,EAOKK,MAAM,iBACN;AAAK,MAAA,SAAS,EAAC,gBAAf;AACK,MAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,CAACD,MAAF,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,WAFJ,CARL,EAaKF,IAAI,CAACS,WAAL,GAAmBC,QAAnB,CAA4B,SAA5B,kBACD;AAAG,MAAA,IAAI,EAAET,GAAT;AAAc,MAAA,MAAM,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE,CAACG,MAAD,GAAU;AAACO,QAAAA,SAAS,EAAE;AAAZ,OAAV,GAAgC,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAdJ,eAoBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAE,MAAMN,SAAS,CAAC,CAACD,MAAF,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCD,WADD,CApBJ,CADJ;AA0BH;;AAED,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC4B,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM8B,IAAI,GAAG/B,KAAK,CAACG,MAAN,CAAa,IAAb,CAAb;AACA,MAAI6B,YAAY,GAAG5B,eAAe,EAAlC;AACA,MAAI6B,SAAS,GAAG,QAAhB;AAEA/B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgC,OAAO,GAAG7B,YAAY,CAAC8B,MAAb,CAAoBC,IAAI,IAAI;AACxC,aAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,IAAlB,CAAuBC,GAAG,IAC7BJ,IAAI,CAACI,GAAD,CAAJ,CAAUpB,WAAV,GAAwBC,QAAxB,CAAiCE,WAAW,CAACH,WAAZ,EAAjC,CADG,CAAP;AAGH,KAJe,CAAhB;AAMAM,IAAAA,gBAAgB,CAACQ,OAAD,CAAhB;AACH,GARQ,EAQN,CAACX,WAAD,CARM,CAAT;AAWArB,EAAAA,SAAS,CAAC,MAAM;AACZuC,IAAAA,qBAAqB,CAAC,MAAM;AACxB,UAAIV,IAAI,CAACW,OAAT,EAAkB;AAChBX,QAAAA,IAAI,CAACW,OAAL,CAAaC,YAAb;AACD;AACJ,KAJoB,CAArB;AAKH,GANQ,EAMN,CAACZ,IAAD,EAAOC,YAAP,EAAqBH,OAArB,CANM,CAAT;;AASA,WAASe,eAAT,GAA2B;AACvB,QAAIZ,YAAY,IAAI,IAApB,EAA0B;AACtBC,MAAAA,SAAS,GAAG,KAAZ;AACH,KAFD,MAEO,IAAID,YAAY,GAAG,GAAnB,EAAwB;AAC3BC,MAAAA,SAAS,GAAG,QAAZ;AACH,KAFM,MAEA,IAAID,YAAY,GAAG,GAAnB,EAAwB;AAC3BC,MAAAA,SAAS,GAAG,KAAZ;AACH;;AACD,WAAOA,SAAP;AACH;;AAED,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAkCR,aAAa,CAACoB,MAAhD,UAA4DxC,YAAY,CAACwC,MAAzE,CAHJ,eAKI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,QAFhB;AAGI,IAAA,KAAK,EAAEtB,WAHX;AAII,IAAA,QAAQ,EAAGuB,CAAD,IAAOtB,cAAc,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJnC;AAKI,IAAA,SAAS,EAAC,aALd;AAMI,IAAA,KAAK,EAAEhB,YAAY,IAAI,GAAhB,GAAsB;AAACiB,MAAAA,KAAK,EAAE;AAAR,KAAtB,GAAqD;AAACA,MAAAA,KAAK,EAAE;AAAR,KANhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUK1C,aAAa,CAAC2C,GAAd,CAAkBV,GAAG,iBAClB;AAAQ,IAAA,OAAO,EAAE,MAAM;AACnBjB,MAAAA,WAAW,IAAEiB,GAAb,GAAmBhB,cAAc,CAAC,EAAD,CAAjC,GAAwCA,cAAc,CAACgB,GAAD,CAAtD;AACH,KAFD;AAGQ,IAAA,KAAK,EAAEjB,WAAW,IAAEiB,GAAb,GAAmB;AAACrB,MAAAA,eAAe,EAAE;AAAlB,KAAnB,GAAkD,IAHjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEqB,GAJF,CADH,CAVL,CALJ,eAwBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAEI,eAAe,EADhC;AAEI,IAAA,YAAY,EAAE,CAFlB;AAGI,IAAA,WAAW,EAAE,EAHjB;AAII,IAAA,OAAO,EAAEO,CAAC,IAAKpB,IAAI,CAACW,OAAL,GAAeS,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMK1B,aAAa,CAACyB,GAAd,CAAkBE,IAAI,iBACnB;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAE,MAAMtB,UAAU,CAAC,CAACD,OAAF,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACA,IAAA,KAAK,EAAEuB,IAAI,CAAC1C,KADZ;AAEA,IAAA,IAAI,EAAE0C,IAAI,CAACzC,IAFX;AAGA,IAAA,GAAG,EAAEyC,IAAI,CAACxC,GAHV;AAIA,IAAA,WAAW,EAAEwC,IAAI,CAACvC,WAJlB;AAKA,IAAA,WAAW,EAAEuC,IAAI,CAACtC,WALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CANL,CADJ,CAxBJ,CADJ,CADJ,CADJ;AAmDH;;AAED,eAAeN,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport useCurrentWidth from '../utils/width';\r\n//import AccordionPanel from '../utils/accordion';\r\nimport './../styles/projects.scss';\r\nimport './../styles/accordion.scss';\r\nimport ProjectsList from './ProjectsList';\r\nimport StackGrid from 'react-stack-grid';\r\n\r\nconst defaultSearch = ['academic', 'article', 'professional', 'project']\r\n\r\nfunction Projects() {\r\n\r\n    function AccordionPanel({title, type, url, description, institution}) {\r\n        var [isOpen, setIsOpen] = useState(false);\r\n        const projectColor = '#e0f1f1';\r\n        const professionalColor = '#e5e0f1';\r\n    \r\n        return (\r\n            <div className=\"accordion\" >\r\n                <div className=\"acctitle\"\r\n                    style={isOpen ? {backgroundColor: '#b5dddd'} : null}\r\n                     onClick={() => setIsOpen(!isOpen)}\r\n                >\r\n                    {title}\r\n                </div>\r\n                {isOpen &&\r\n                (<div className=\"accdescription\"\r\n                      onClick={() => setIsOpen(!isOpen)}>\r\n                    {description}\r\n                </div>)\r\n                }\r\n                {type.toLowerCase().includes('article') && (\r\n                <a href={url} target=\"_blank\">\r\n                    <div className=\"additional\" style={!isOpen ? {marginTop: '-5px'} : null}>\r\n                    GO TO ARTICLE\r\n                    </div>\r\n                </a>\r\n                )}\r\n                <div className=\"accinstitution\" onClick={() => setIsOpen(!isOpen)}>\r\n                {institution}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [filtered, setFiltered] = useState(false);\r\n    const [clicked, setClicked] = useState(false);\r\n    const grid = React.useRef(null);\r\n    var currentWidth = useCurrentWidth();\r\n    var gridWidth = '33.33%';\r\n\r\n    useEffect(() => {\r\n        const results = ProjectsList.filter(proj => {\r\n            return Object.keys(proj).some(key =>\r\n                proj[key].toLowerCase().includes(searchValue.toLowerCase())\r\n            )\r\n        });\r\n        \r\n        setSearchResults(results);\r\n    }, [searchValue]\r\n    );\r\n\r\n    useEffect(() => {\r\n        requestAnimationFrame(() => {\r\n            if (grid.current) {\r\n              grid.current.updateLayout();\r\n            }\r\n        });\r\n    }, [grid, currentWidth, clicked]\r\n    );\r\n\r\n    function gridColumnWidth() {\r\n        if (currentWidth >= 1000) {\r\n            gridWidth = '25%'\r\n        } else if (currentWidth > 800) {\r\n            gridWidth = '33.33%'\r\n        } else if (currentWidth < 800) {\r\n            gridWidth = '50%'\r\n        }\r\n        return gridWidth;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"itemspace\">\r\n                    <div className=\"title\">Projects</div>\r\n\r\n                    <div className=\"subtitle\">seeing {searchResults.length} of {ProjectsList.length}\r\n                    </div>\r\n                    <div className=\"filterbox\">\r\n                        <input \r\n                            type='text'\r\n                            placeholder='search'\r\n                            value={searchValue}\r\n                            onChange={(e) => setSearchValue(e.target.value)}\r\n                            className=\"searchField\"\r\n                            style={currentWidth <= 800 ? {width: 'calc(80vw - 22px)'} : {width: 'calc(33.33% - 30px)'}}\r\n                        />\r\n                        \r\n                        {defaultSearch.map(key => (\r\n                            <button onClick={() => {\r\n                                searchValue==key ? setSearchValue('') : setSearchValue(key)\r\n                            }}\r\n                                    style={searchValue==key ? {backgroundColor: '#e0f1f1'} : null}\r\n                            >{key}</button>\r\n                        ))}\r\n                        {/* {searchValue!= '' ? <button onClick={() => setSearchValue('')} className=\"clearbutton\">clear filter</button> : null} */}\r\n                    </div>\r\n                    <div className=\"projects\">\r\n                        <StackGrid \r\n                            columnWidth={gridColumnWidth()}\r\n                            gutterHeight={5}\r\n                            gutterWidth={15}\r\n                            gridRef={r => (grid.current = r)}\r\n                        >\r\n                            {searchResults.map(item => (\r\n                                <div className=\"click\" onClick={() => setClicked(!clicked)}>\r\n                                    <AccordionPanel\r\n                                    title={item.title}\r\n                                    type={item.type}\r\n                                    url={item.url}\r\n                                    description={item.description}\r\n                                    institution={item.institution}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </StackGrid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}