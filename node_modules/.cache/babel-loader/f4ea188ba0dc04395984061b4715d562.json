{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marissa\\\\Desktop\\\\Programas\\\\marissa\\\\src\\\\components\\\\Projects.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useCurrentWidth from './../functions/width';\nimport AccordionPanel from './../functions/accordion';\nimport './../styles/projects.scss';\nimport ProjectsList from './ProjectsList';\nimport StackGrid from 'react-stack-grid';\n\nfunction Projects() {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [renderHook, setRenderHook] = useState(false);\n  const grid = React.useRef(null);\n  var currentWidth = useCurrentWidth();\n  useEffect(e => {\n    const results = ProjectsList.filter(proj => {\n      return Object.keys(proj).some(key => proj[key].toLowerCase().includes(searchValue.toLowerCase()));\n    });\n    requestAnimationFrame(() => {\n      if (grid.current) {\n        grid.current.updateLayout();\n        console.log(grid.current);\n      }\n    });\n    setSearchResults(results);\n  }, [searchValue, grid]);\n\n  function handleClick(e) {\n    e.preventDefault();\n    console.log('this is:', this);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"itemspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"seeing \", searchResults.length, \" of \", ProjectsList.length, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filterbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search\",\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    className: \"searchField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StackGrid, {\n    columnWidth: currentWidth <= 900 ? '50%' : '33.33%',\n    gutterHeight: 5,\n    gutterWidth: 15,\n    gridRef: r => grid.current = r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, searchResults.map(item => /*#__PURE__*/React.createElement(AccordionPanel, {\n    title: item.title,\n    description: item.description,\n    institution: item.institution,\n    onClick: handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  })))))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["C:/Users/Marissa/Desktop/Programas/marissa/src/components/Projects.js"],"names":["React","useState","useEffect","useRef","useCurrentWidth","AccordionPanel","ProjectsList","StackGrid","Projects","searchValue","setSearchValue","searchResults","setSearchResults","renderHook","setRenderHook","grid","currentWidth","e","results","filter","proj","Object","keys","some","key","toLowerCase","includes","requestAnimationFrame","current","updateLayout","console","log","handleClick","preventDefault","length","target","value","r","map","item","title","description","institution"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport useCurrentWidth from './../functions/width';\r\nimport AccordionPanel from './../functions/accordion';\r\nimport './../styles/projects.scss';\r\nimport ProjectsList from './ProjectsList';\r\nimport StackGrid from 'react-stack-grid';\r\n\r\nfunction Projects() {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [renderHook, setRenderHook] = useState(false);\r\n    const grid = React.useRef(null);\r\n    var currentWidth = useCurrentWidth();\r\n\r\n    useEffect((e) => {\r\n        const results = ProjectsList.filter(proj => {\r\n            return Object.keys(proj).some(key =>\r\n                proj[key].toLowerCase().includes(searchValue.toLowerCase())\r\n            )\r\n        });\r\n        requestAnimationFrame(() => {\r\n            if (grid.current) {\r\n              grid.current.updateLayout();\r\n              console.log(grid.current);\r\n            }\r\n          });\r\n        setSearchResults(results);\r\n    }, [searchValue, grid]\r\n    );\r\n\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n        console.log('this is:', this);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"itemspace\">\r\n                    <div className=\"title\">Projects</div>\r\n\r\n                    <div className=\"subtitle\">seeing {searchResults.length} of {ProjectsList.length} </div>\r\n                    <div className=\"filterbox\">\r\n                        <input \r\n                            type='text'\r\n                            placeholder='search'\r\n                            value={searchValue}\r\n                            onChange={(e) => setSearchValue(e.target.value)}\r\n                            className=\"searchField\"\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"projects\">\r\n                        <StackGrid \r\n                            columnWidth={currentWidth <= 900 ? '50%' : '33.33%'}\r\n                            gutterHeight={5}\r\n                            gutterWidth={15}\r\n                            gridRef={r => (grid.current = r)}\r\n                        >\r\n                            {searchResults.map(item => (\r\n                                <AccordionPanel\r\n                                    title={item.title}\r\n                                    description={item.description}\r\n                                    institution={item.institution}\r\n                                    onClick={handleClick()}\r\n                                />\r\n                            ))}\r\n                        </StackGrid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}