{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Marissa\\\\Desktop\\\\Programas\\\\marissa\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';var getWidth=function getWidth(){return window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;};function useCurrentWidth(){var _useState=useState(getWidth()),_useState2=_slicedToArray(_useState,2),width=_useState2[0],setWidth=_useState2[1];useEffect(function(){var resizeListener=function resizeListener(){setWidth(getWidth());};window.addEventListener('resize',resizeListener);return function(){window.removeEventListener('resize',resizeListener);};},[]);return width;}export default useCurrentWidth;","map":{"version":3,"sources":["C:/Users/Marissa/Desktop/Programas/marissa/src/utils/width.js"],"names":["React","useState","useEffect","getWidth","window","innerWidth","document","documentElement","clientWidth","body","useCurrentWidth","width","setWidth","resizeListener","addEventListener","removeEventListener"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMC,CAAAA,MAAM,CAACC,UAAP,EAClBC,QAAQ,CAACC,eAAT,CAAyBC,WADP,EAElBF,QAAQ,CAACG,IAAT,CAAcD,WAFF,EAAjB,CAIA,QAASE,CAAAA,eAAT,EAA2B,eACDT,QAAQ,CAACE,QAAQ,EAAT,CADP,wCACpBQ,KADoB,eACbC,QADa,eAGzBV,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BD,QAAQ,CAACT,QAAQ,EAAT,CAAR,CACD,CAFD,CAIAC,MAAM,CAACU,gBAAP,CAAwB,QAAxB,CAAkCD,cAAlC,EAEA,MAAO,WAAM,CACXT,MAAM,CAACW,mBAAP,CAA2B,QAA3B,CAAqCF,cAArC,EACD,CAFD,CAGD,CAVQ,CAUN,EAVM,CAAT,CAWA,MAAOF,CAAAA,KAAP,CACD,CAED,cAAeD,CAAAA,eAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst getWidth = () => window.innerWidth\r\n  || document.documentElement.clientWidth\r\n  || document.body.clientWidth;\r\n\r\nfunction useCurrentWidth() {\r\n  let [width, setWidth] = useState(getWidth());\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      setWidth(getWidth())\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, [])\r\n  return width;\r\n}\r\n\r\nexport default useCurrentWidth;"]},"metadata":{},"sourceType":"module"}