{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marissa\\\\Desktop\\\\Programas\\\\marissa\\\\src\\\\components\\\\Projects.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useCurrentWidth from './../functions/width'; //import AccordionPanel from './../functions/accordion';\n\nimport './../styles/projects.scss';\nimport ProjectsList from './ProjectsList';\nimport StackGrid from 'react-stack-grid';\nimport './../styles/accordion.scss';\n\nfunction Projects() {\n  const [isOpen, setIsOpen] = useState(true);\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [renderHook, setRenderHook] = useState(false);\n  const grid = React.useRef(null);\n  var currentWidth = useCurrentWidth();\n  useEffect(e => {\n    const results = ProjectsList.filter(proj => {\n      return Object.keys(proj).some(key => proj[key].toLowerCase().includes(searchValue.toLowerCase()));\n    });\n    requestAnimationFrame(() => {\n      if (grid.current) {\n        grid.current.updateLayout(); //console.log(grid.current);\n      }\n    });\n    setSearchResults(results);\n  }, [searchValue, grid]);\n\n  function clicked() {\n    if (grid.current) {\n      grid.current.updateLayout();\n      console.log('clicked');\n    } else {\n      console.log('not clicked');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"itemspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"seeing \", searchResults.length, \" of \", ProjectsList.length, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filterbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search\",\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    className: \"searchField\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects\",\n    onClick: clicked(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StackGrid, {\n    columnWidth: currentWidth <= 900 ? '50%' : '33.33%',\n    gutterHeight: 5,\n    gutterWidth: 15,\n    gridRef: r => grid.current = r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, searchResults.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accordion\",\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"acctitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, item.title), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accdescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 34\n    }\n  }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accinstitution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, item.institution))))))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["C:/Users/Marissa/Desktop/Programas/marissa/src/components/Projects.js"],"names":["React","useState","useEffect","useRef","useCurrentWidth","ProjectsList","StackGrid","Projects","isOpen","setIsOpen","searchValue","setSearchValue","searchResults","setSearchResults","renderHook","setRenderHook","grid","currentWidth","e","results","filter","proj","Object","keys","some","key","toLowerCase","includes","requestAnimationFrame","current","updateLayout","clicked","console","log","length","target","value","r","map","item","title","description","institution"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport useCurrentWidth from './../functions/width';\r\n//import AccordionPanel from './../functions/accordion';\r\nimport './../styles/projects.scss';\r\nimport ProjectsList from './ProjectsList';\r\nimport StackGrid from 'react-stack-grid';\r\nimport './../styles/accordion.scss';\r\n\r\nfunction Projects() {\r\n    const [isOpen, setIsOpen] = useState(true);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [renderHook, setRenderHook] = useState(false);\r\n    const grid = React.useRef(null);\r\n    var currentWidth = useCurrentWidth();\r\n\r\n    useEffect((e) => {\r\n        const results = ProjectsList.filter(proj => {\r\n            return Object.keys(proj).some(key =>\r\n                proj[key].toLowerCase().includes(searchValue.toLowerCase())\r\n            )\r\n        });\r\n        requestAnimationFrame(() => {\r\n            if (grid.current) {\r\n              grid.current.updateLayout();\r\n              //console.log(grid.current);\r\n            }\r\n          });\r\n        setSearchResults(results);\r\n    }, [searchValue, grid]\r\n    );\r\n\r\n    function clicked() {\r\n        if (grid.current) {\r\n            grid.current.updateLayout();\r\n            console.log('clicked');\r\n        } else {console.log('not clicked')}\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"itemspace\">\r\n                    <div className=\"title\">Projects</div>\r\n\r\n                    <div className=\"subtitle\">seeing {searchResults.length} of {ProjectsList.length} </div>\r\n                    <div className=\"filterbox\">\r\n                        <input \r\n                            type='text'\r\n                            placeholder='search'\r\n                            value={searchValue}\r\n                            onChange={(e) => setSearchValue(e.target.value)}\r\n                            className=\"searchField\"\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"projects\" onClick={clicked()}>\r\n                        <StackGrid \r\n                            columnWidth={currentWidth <= 900 ? '50%' : '33.33%'}\r\n                            gutterHeight={5}\r\n                            gutterWidth={15}\r\n                            gridRef={r => (grid.current = r)}\r\n                        >\r\n                            {searchResults.map(item => (\r\n                                <div className=\"accordion\"\r\n                                onClick={() => setIsOpen(!isOpen)}>\r\n                                <div className=\"acctitle\">\r\n                                    {item.title}\r\n                                </div>\r\n                                {isOpen &&\r\n                                (<div className=\"accdescription\">\r\n                                    {item.description}\r\n                                </div>)\r\n                                }\r\n                                <div className=\"accinstitution\">\r\n                                    {item.institution}\r\n                                </div>\r\n                            </div>\r\n                            ))}\r\n                        </StackGrid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}