{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marissa\\\\Desktop\\\\Programas\\\\marissa\\\\src\\\\components\\\\Projects.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useCurrentWidth from '../utils/width';\nimport useCurrentHeight from '../utils/height';\nimport AccordionPanel from '../utils/accordion';\nimport './../styles/projects.scss';\nimport ProjectsList from './ProjectsList';\nimport StackGrid from 'react-stack-grid';\nconst defaultSearch = ['academic', 'article', 'professional', 'project'];\n\nfunction Projects() {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [clicked, setClicked] = useState(false);\n  const grid = React.useRef(null);\n  var currentWidth = useCurrentWidth();\n  var currentHeight = useCurrentHeight();\n  var gridWidth = '33.33%';\n  useEffect(() => {\n    const results = ProjectsList.filter(proj => {\n      return Object.keys(proj).some(key => proj[key].toLowerCase().includes(searchValue.toLowerCase()));\n    });\n    setSearchResults(results);\n  }, [searchValue]);\n  useEffect(() => {\n    requestAnimationFrame(() => {\n      if (grid.current) {\n        grid.current.updateLayout();\n      }\n    });\n  }, [grid, currentWidth, currentHeight, clicked]);\n\n  function gridColumnWidth() {\n    if (currentWidth >= 1000) {\n      gridWidth = '25%';\n    } else if (currentWidth > 800) {\n      gridWidth = '33.33%';\n    } else if (currentWidth < 800) {\n      gridWidth = '50%';\n    }\n\n    return gridWidth;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"itemspace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"seeing \", searchResults.length, \" of \", ProjectsList.length), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filterbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search\",\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    className: \"searchField\",\n    style: currentWidth <= 800 ? {\n      width: 'calc(80vw - 22px)'\n    } : {\n      width: 'calc(33.33% - 30px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }), defaultSearch.map(key => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      searchValue.toLowerCase().includes(key) ? setSearchValue('') : setSearchValue(key);\n    },\n    className: searchValue.toLowerCase().includes(key) ? 'buttonSelected' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"   \", key, searchValue.toLowerCase().includes(key) ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"clearFilter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 82\n    }\n  }, \" x\") : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StackGrid, {\n    columnWidth: gridColumnWidth(),\n    gutterHeight: 5,\n    gutterWidth: 15,\n    gridRef: r => grid.current = r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, searchResults.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"click\",\n    onClick: () => setClicked(!clicked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(AccordionPanel, {\n    title: item.title,\n    type: item.type,\n    url: item.url,\n    description: item.description,\n    institution: item.institution,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }))))))));\n}\n\nexport default Projects;","map":{"version":3,"sources":["C:/Users/Marissa/Desktop/Programas/marissa/src/components/Projects.js"],"names":["React","useState","useEffect","useRef","useCurrentWidth","useCurrentHeight","AccordionPanel","ProjectsList","StackGrid","defaultSearch","Projects","searchValue","setSearchValue","searchResults","setSearchResults","clicked","setClicked","grid","currentWidth","currentHeight","gridWidth","results","filter","proj","Object","keys","some","key","toLowerCase","includes","requestAnimationFrame","current","updateLayout","gridColumnWidth","length","e","target","value","width","map","r","item","title","type","url","description","institution"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport useCurrentWidth from '../utils/width';\r\nimport useCurrentHeight from '../utils/height';\r\nimport AccordionPanel from '../utils/accordion';\r\nimport './../styles/projects.scss';\r\nimport ProjectsList from './ProjectsList';\r\nimport StackGrid from 'react-stack-grid';\r\n\r\nconst defaultSearch = ['academic', 'article', 'professional', 'project']\r\n\r\nfunction Projects() {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [clicked, setClicked] = useState(false);\r\n    const grid = React.useRef(null);\r\n    var currentWidth = useCurrentWidth();\r\n    var currentHeight = useCurrentHeight();\r\n    var gridWidth = '33.33%';\r\n\r\n    useEffect(() => {\r\n        const results = ProjectsList.filter(proj => {\r\n            return Object.keys(proj).some(key =>\r\n                proj[key].toLowerCase().includes(searchValue.toLowerCase())\r\n            )\r\n        });\r\n        \r\n        setSearchResults(results);\r\n    }, [searchValue]\r\n    );\r\n\r\n    useEffect(() => {\r\n        requestAnimationFrame(() => {\r\n            if (grid.current) {\r\n              grid.current.updateLayout();\r\n            }\r\n        });\r\n    }, [grid, currentWidth, currentHeight, clicked]\r\n    );\r\n\r\n    function gridColumnWidth() {\r\n        if (currentWidth >= 1000) {\r\n            gridWidth = '25%'\r\n        } else if (currentWidth > 800) {\r\n            gridWidth = '33.33%'\r\n        } else if (currentWidth < 800) {\r\n            gridWidth = '50%'\r\n        }\r\n        return gridWidth;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"itemspace\">\r\n\r\n                    <div className=\"title\">Projects</div>\r\n\r\n                    <div className=\"subtitle\">\r\n                        seeing {searchResults.length} of {ProjectsList.length}\r\n                    </div>\r\n\r\n                    <div className=\"filterbox\">\r\n                        <input \r\n                            type='text'\r\n                            placeholder='search'\r\n                            value={searchValue}\r\n                            onChange={(e) => setSearchValue(e.target.value)}\r\n                            className=\"searchField\"\r\n                            style={currentWidth <= 800 ? {width: 'calc(80vw - 22px)'} : {width: 'calc(33.33% - 30px)'}}\r\n                        />\r\n                        \r\n                        {defaultSearch.map(key => (\r\n                            <button \r\n                                onClick={ () => {searchValue.toLowerCase().includes(key) ? setSearchValue('') : setSearchValue(key) }}\r\n                                className={ searchValue.toLowerCase().includes(key) ? 'buttonSelected' : null }\r\n                            >   {key}{ searchValue.toLowerCase().includes(key) ? <span className=\"clearFilter\"> x</span> : null}</button>\r\n                        ))}\r\n                        {/* {searchValue!= '' ? <button onClick={() => setSearchValue('')} className=\"clearbutton\">clear filter</button> : null} */}\r\n                    </div>\r\n\r\n                    <div className=\"projects\">\r\n                        <StackGrid \r\n                            columnWidth={gridColumnWidth()}\r\n                            gutterHeight={5}\r\n                            gutterWidth={15}\r\n                            gridRef={r => (grid.current = r)}\r\n                        >\r\n                            {searchResults.map(item => (\r\n                                <div className=\"click\" onClick={() => setClicked(!clicked)}>\r\n                                    <AccordionPanel\r\n                                    title={item.title}\r\n                                    type={item.type}\r\n                                    url={item.url}\r\n                                    description={item.description}\r\n                                    institution={item.institution}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </StackGrid>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}