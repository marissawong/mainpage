{"version":3,"sources":["components/App.js","utils/width.js","components/Modal.js","components/Header.js","components/Accordion.js","components/ProjectsList.js","components/Projects.js","components/Footer.js","serviceWorker.js","index.js"],"names":["App","className","viewBox","preserveAspectRatio","d","style","fill","getWidth","window","innerWidth","document","documentElement","clientWidth","body","useCurrentWidth","useState","width","setWidth","useEffect","resizeListener","addEventListener","removeEventListener","Modal","children","showModal","closeModal","CSSTransition","in","classNames","timeout","unmountOnExit","Logo","Header","windowWidth","expandedMenu","setExpandedMenu","menu","useRef","openModal","setOpenModal","setCloseModal","MenuItems","onClick","href","onClickMenu","useScrollPosition","currPos","Math","abs","y","e","Navigation","ref","setTimeout","AccordionPanel","title","type","url","description","institution","isOpen","setIsOpen","backgroundColor","toLowerCase","includes","target","marginTop","ProjectsList","defaultSearch","Projects","searchValue","setSearchValue","searchResults","setSearchResults","clicked","setClicked","grid","React","currentWidth","gridWidth","results","filter","proj","Object","keys","some","key","requestAnimationFrame","current","updateLayout","id","length","placeholder","value","onChange","map","columnWidth","gutterHeight","gutterWidth","gridRef","r","item","Footer","year","Date","getFullYear","class","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e04f15b2.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './../styles/App.scss';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"mainApp\">\n          :)\n        </div>\n      </div>\n      <div className=\"wave\">\n        <svg viewBox=\"0 0 500 300\" preserveAspectRatio=\"xMinYMin meet\">\n          <path d=\"M0,100 C150,200 350,0 500,100 L500,00 L0,0 Z\" style={{fill: '#e0f1f1'}}></path>\n        </svg>\n      </div>\n      {/* <div className=\"bordered\"> </div> */}\n    </>\n  );\n}\n\nexport default App;\n","import React, {useState, useEffect} from 'react';\r\n\r\nconst getWidth = () => window.innerWidth\r\n  || document.documentElement.clientWidth\r\n  || document.body.clientWidth;\r\n\r\nfunction useCurrentWidth() {\r\n  let [width, setWidth] = useState(getWidth());\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      setWidth(getWidth())\r\n    };\r\n\r\n    window.addEventListener('resize', resizeListener);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, [])\r\n  return width;\r\n}\r\n\r\nexport default useCurrentWidth;","import React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './../styles/modal.scss';\r\n\r\nconst Modal = ({children, showModal, closeModal}) => {\r\n    \r\n    return (\r\n        <CSSTransition\r\n            in={showModal && !closeModal}\r\n            classNames=\"modalEvents\"\r\n            timeout={100}\r\n            unmountOnExit\r\n        >\r\n        <div className=\"modal\">\r\n            \r\n            <div className=\"dialog\">\r\n\r\n                {children}\r\n\r\n            </div>\r\n            \r\n        </div>\r\n        </CSSTransition>\r\n    );\r\n\r\n}\r\n\r\nexport default Modal;","import React, {useState, useEffect, useRef} from 'react';\r\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position';\r\nimport useCurrentWidth from '../utils/width';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './../styles/header.scss';\r\n\r\nimport Modal from './Modal.js'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            over\r\n            <div className=\"subLogo1\">aligned</div>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default function Header() {\r\n    var windowWidth = useCurrentWidth();\r\n    var windowHeight = null;\r\n    var [expandedMenu, setExpandedMenu] = useState(false);\r\n    const menu = useRef(0);\r\n    const maxWidth = 750;\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [closeModal, setCloseModal] = useState(false);\r\n\r\n    const MenuItems = () => {\r\n        return (\r\n            <>\r\n                <div className=\"navBut\" onClick={() => setOpenModal(true)}>about</div>\r\n                <a href=\"/\">projects</a>\r\n                <a href=\"/\">contact</a>\r\n    \r\n            </>\r\n        )\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (expandedMenu) {\r\n        document.addEventListener('mousedown', onClickMenu);\r\n      }\r\n    }, [expandedMenu]);\r\n\r\n    useScrollPosition(({ currPos }) => {\r\n        windowHeight = Math.abs(currPos.y);\r\n        if (windowHeight >= 75) {\r\n            setExpandedMenu(false);\r\n        }\r\n    });\r\n  \r\n    const onClickMenu = e => {\r\n        document.removeEventListener('mousedown', onClickMenu);\r\n        setExpandedMenu(false);\r\n    };\r\n\r\n    const Navigation = () => {\r\n        if (windowWidth > maxWidth) {\r\n            return <MenuItems />\r\n        } else if (windowWidth <= maxWidth) {\r\n            return (\r\n            <div className=\"plus\"\r\n                onClick={() => setExpandedMenu(!expandedMenu)}\r\n            >\r\n                [{expandedMenu ? '-' : '+'}]\r\n            </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    function handleClose() {\r\n        setOpenModal(false);\r\n        setCloseModal(true);\r\n        setTimeout(setCloseModal(false), 100);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"headerNav\">\r\n            <Logo />\r\n\r\n            <div className=\"nav\">\r\n                <Navigation />\r\n            </div>\r\n        </div>\r\n        <CSSTransition\r\n            in={expandedMenu && windowWidth <= maxWidth}\r\n            classNames=\"menuEvents\"\r\n            timeout={300}\r\n            unmountOnExit\r\n        >\r\n            <div className=\"verticalMenu\" ref={menu}>\r\n                <MenuItems />\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <Modal\r\n            showModal={openModal}\r\n            closeModal={closeModal}\r\n        >\r\n        \r\n            <button onClick={() => handleClose()}>close</button>\r\n        </Modal>\r\n        </>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\n//import {CSSTransition} from 'react-transition-group';\r\nimport './../styles/accordion.scss';\r\n\r\nexport default function AccordionPanel({title, type, url, description, institution}) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"accordion\" >\r\n            <div className=\"acctitle\"\r\n                style={isOpen ? {backgroundColor: '#e0f1f1'} : null}\r\n                 onClick={() => setIsOpen(!isOpen)}\r\n            >\r\n                {title}\r\n            </div>\r\n            {isOpen &&\r\n            (<div className=\"accdescription\"\r\n                  onClick={() => setIsOpen(!isOpen)}>\r\n                {description}\r\n            </div>)\r\n            }\r\n            {type.toLowerCase().includes('article') && (\r\n            <a href={url} target=\"_blank\">\r\n                <div className=\"additional\" style={!isOpen ? {marginTop: '-5px'} : null}>\r\n                GO TO ARTICLE\r\n                </div>\r\n            </a>\r\n            )}\r\n            <div className=\"accinstitution\" onClick={() => setIsOpen(!isOpen)}>\r\n            {institution}\r\n            </div>\r\n        </div>\r\n    )\r\n}","const ProjectsList = [\r\n    {\r\n        title: 'Tuffão Baja SAE',\r\n        type: 'project academic ',\r\n        url: '',\r\n        institution: 'Universidade Federal Fluminense',\r\n        description: 'Participação no projeto de engenharia Baja SAE, dentro do subsistema de Eletroeletrônica e núcleo de aquisição de dados, realizando a programação de sensores utilizando o microcontrolador Arduino e a interface dos dados com o piloto.'\r\n    },\r\n    {\r\n        title: 'Monitoria',\r\n        type: 'academic',\r\n        url: '',\r\n        institution: 'Universidade Federal Fluminense',\r\n        description: 'Avaliar e propor ajustes para melhoria do processo ensino-aprendizagem; colaborar em atividades de aprendizado com resolução de exercícios; auxiliar os alunos nos trabalhos de pesquisa.'\r\n    },\r\n    {\r\n        title: 'Internal Audit Intern',\r\n        type: 'professional',\r\n        url: '',\r\n        institution: 'Nissan Motor Corporation',\r\n        description: 'Formalização de requisições e ordens de compra no sistema SAP (ERP); publicação de informações e documentos na intranet do GRC; preparação de apresentações para reporte do status do plano de auditoria para fins de comitês de auditoria e sessões de monitoramento de desempenho do GRC; monitoramento e atualização do status dos issues identificados pela auditoria interna e respectivos planos de ação para fins de reporte ao ponto focal global do “Issue Follow-up”; apoio na execução dos procedimentos de avaliação dos controles internos para atendimento das exigências da J-SOX; acompanhamento e documentação dos procedimentos de auditoria adotados no acompanhamento dos sorteios e campanhas internas no âmbito da Nissan Brasil.'\r\n    },\r\n    {\r\n        title: 'Tax Technologies Intern',\r\n        type: 'professional',\r\n        url: '',\r\n        institution: 'TechnipFMC',\r\n        description: 'Suporte aos usuários nos sistemas fiscais; atualização dos sistemas disponíveis; realização da interface entre usuários dos sistemas e TI; configuração de sistemas.'\r\n    },\r\n    {\r\n        title: 'Development and Automated Tests Intern',\r\n        type: 'professional',\r\n        url: '',\r\n        institution: 'Target Solutions',\r\n        description: 'Atualização do caderno de testes com base nas especificações de tela e funcionalidades; realização de testes manuais; realização de testes automatizados utilizando Robot Framework e Selenium; desenvolvimento de telas em front-end e correção de bugs.'\r\n    },\r\n    {\r\n        title: 'Creating a Responsive Navigation Bar with React',\r\n        type: 'article tutorial',\r\n        url: 'http://dev.to/marissa',\r\n        institution: '#ReactJS on dev.to',\r\n        description: 'A tutorial about how to create a responsive navigation bar using React Hooks.'\r\n    },\r\n    {\r\n        title: 'Using React Stack Grid with Hooks, Width Adjustment and Search Filters',\r\n        type: 'article tutorial',\r\n        url: 'http://dev.to/marissa',\r\n        institution: '#ReactJS on dev.to',\r\n        description: 'A tutorial about how to create a responsive navigation bar using React Hooks.'\r\n    }\r\n];\r\n\r\nexport default ProjectsList;","import React, {useState, useEffect, useRef} from 'react';\r\nimport useCurrentWidth from '../utils/width';\r\nimport useCurrentHeight from '../utils/height';\r\nimport AccordionPanel from './Accordion';\r\nimport './../styles/projects.scss';\r\nimport ProjectsList from './ProjectsList';\r\nimport StackGrid from 'react-stack-grid';\r\n\r\nconst defaultSearch = ['academic', 'article', 'professional', 'project']\r\n\r\nfunction Projects() {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [clicked, setClicked] = useState(false);\r\n    const grid = React.useRef(null);\r\n    var currentWidth = useCurrentWidth();\r\n    var gridWidth = '33.33%';\r\n\r\n    useEffect(() => {\r\n        const results = ProjectsList.filter(proj => {\r\n            return Object.keys(proj).some(key =>\r\n                proj[key].toLowerCase().includes(searchValue.toLowerCase())\r\n            )\r\n        });\r\n        setSearchResults(results);\r\n    }, [searchValue]\r\n    );\r\n\r\n    useEffect(() => {\r\n        requestAnimationFrame(() => {\r\n            if (grid.current) {\r\n              grid.current.updateLayout();\r\n            }\r\n        });\r\n\r\n    }, [grid, currentWidth, clicked, searchValue]\r\n    );\r\n\r\n    function gridColumnWidth() {\r\n        if (currentWidth >= 1000) {\r\n            gridWidth = '25%'\r\n        } else if (currentWidth > 800) {\r\n            gridWidth = '33.33%'\r\n        } else if (currentWidth < 800) {\r\n            gridWidth = '50%'\r\n        }\r\n        return gridWidth;\r\n    }\r\n\r\n    return (\r\n        <div id=\"projects\">\r\n            <div className=\"container\">\r\n                <div className=\"itemspace\">\r\n\r\n                    <div className=\"title\">Projects</div>\r\n\r\n                    <div className=\"subtitle\">\r\n                        seeing {searchResults.length} of {ProjectsList.length}\r\n                    </div>\r\n\r\n                    <div className=\"filterbox\">\r\n                        <input \r\n                            type='text'\r\n                            placeholder='search'\r\n                            value={searchValue}\r\n                            onChange={(e) => setSearchValue(e.target.value)}\r\n                            className=\"searchField\"\r\n                            style={currentWidth <= 800 ? {width: 'calc(80vw - 22px)'} : {width: 'calc(33.33% - 30px)'}}\r\n                        />\r\n                        \r\n                        {defaultSearch.map(key => (\r\n                            <button \r\n                                onClick={ () => {searchValue.toLowerCase().includes(key) ? setSearchValue('') : setSearchValue(key) }}\r\n                                className={ searchValue.toLowerCase().includes(key) ? 'buttonSelected' : null }\r\n                            >   {key}{ searchValue.toLowerCase().includes(key) ? <span className=\"clearFilter\"> x</span> : null}</button>\r\n                        ))}\r\n                        {/* {searchValue!= '' ? <button onClick={() => setSearchValue('')} className=\"clearbutton\">clear filter</button> : null} */}\r\n                    </div>\r\n\r\n                    <div className=\"projects\">\r\n                        <StackGrid \r\n                            columnWidth={gridColumnWidth()}\r\n                            gutterHeight={5}\r\n                            gutterWidth={15}\r\n                            gridRef={r => (grid.current = r)}\r\n                        >\r\n                            {searchResults.map(item => (\r\n                                <div className=\"click\" onClick={() => setClicked(!clicked)}>\r\n                                    <AccordionPanel\r\n                                    title={item.title}\r\n                                    type={item.type}\r\n                                    url={item.url}\r\n                                    description={item.description}\r\n                                    institution={item.institution}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </StackGrid>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './../styles/footer.scss';\r\n\r\nexport default function Footer() {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    \r\n    return (\r\n        <div className=\"footercontainer\">\r\n            <div className=\"footer\">\r\n                <div className=\"footer-column\">\r\n                    by <b>marissa wong</b> &copy; {year}\r\n                </div>\r\n                <div className=\"footer-column\">\r\n                    <a href=\"/github\"><i class=\"fa fa-github\" /></a>\r\n                    <a href=\"/facebook\"><i class=\"fab fa-linkedin\"/></a>\r\n                    <a href=\"/instagram\"><i class=\"fa fa-envelope\"/></a>\r\n                    <a href=\"/dev\"><i class=\"fab fa-dev\"/></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport Header from './components/Header';\nimport Projects from './components/Projects'\nimport Footer from './components/Footer';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <Header />,\n//   document.getElementById('header')\n// );\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <>\n  <Header />\n  <App />\n  <Projects />\n  <Footer />\n  </>,\n  document.getElementById('projects')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}